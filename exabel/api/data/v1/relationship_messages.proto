// Copyright (c) 2019-2022 Exabel AS. All rights reserved.

syntax = "proto3";

package exabel.api.data.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "protoc_gen_openapiv2/options/annotations.proto";

option go_package = "exabel.com/api/data/v1";
option java_multiple_files = true;
option java_outer_classname = "RelationshipMessagesProto";
option java_package = "com.exabel.api.data.v1";

// A relationship type resource in the Data API.
message RelationshipType {
  // Unique resource name of the relationship type, e.g.
  // `relationshipTypes/namespace.relationshipTypeIdentifier`.
  // The namespace must be empty (being global) or a namespace accessible to the customer.
  // The relationship type identifier must match the regex `[A-Z][A-Z0-9_]{0,63}`.
  string name = 1 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "relationshipTypeName"}
      example: "\"relationshipTypes/ns.HAS_STORE\""
    }
  ];
  // This is currently not used in the Exabel app, but may be in future.
  string description = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"Indicates that an entity owns a store\""}];
  // Global relationship types and those from data sets that you subscribe to will be read-only.
  bool read_only = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Whether this relationship type specifies an `ownership` in the data set model. Ownership
  // relationships must go *from* the owner *to* the child entity.
  bool is_ownership = 4;
  // Additional properties of this relationship type. This is currently not used in the Exabel app,
  // but may be in future.
  google.protobuf.Struct properties = 100;
}

// A relationship resource in the Data API. All relationships have one relationship type as its
// parent. Relationships do not have resource names, but are identified by their (type, from, to)
// triple. There can only be one relationship of one type between two entities (as viewed by a
// single user). The namespaces of the end points must either be empty (being global) or one of the
// predetermined namespaces the customer has access to.
message Relationship {
  // Parent relationship type, e.g. `relationshipTypes/ns.type1`.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "relationshipTypeName"}
      example: "\"relationshipTypes/ns.HAS_STORE\""
    }
  ];
  // Resource name of entity the relationship starts from, e.g.
  // `entityTypes/ns.type1/entities/ns.entity1`.
  string from_entity = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"entityTypes/company/entities/F_12345-E\""}
  ];
  // Resource name of entity the relationship goes to, e.g.
  // `entityTypes/ns.type2/entities/ns.entity2`.
  string to_entity = 3 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"entityTypes/ns.store/entities/ns.some_store_id\""}
  ];
  // This is currently not used in the Exabel app, but may be in future.
  string description = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "\"F_12345-E owns some_store_id\""}];
  // Global relationships and those from data sets that you subscribe to will be read-only.
  bool read_only = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Additional properties of this relationship. This is currently not used in the Exabel app, but
  // may be in future.
  google.protobuf.Struct properties = 100;
}
